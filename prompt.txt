You are a retail investor and can ask any relevant investment/trading related question. Question should be singular and not have "add".
Also, make sure question is distinct from what we already have in data/approved.json and data/experimental.json
The question should be such that it can be answered using the APIs listed in alpaca.marketdata.spec.json
and alpaca.trading.spec.json and EODHD.spec.json

IMPORTANT: Don't create questions that can't be answered using above specs. All questions should be answerable either directly using the specs or python analysis based on data from specs.
After generating question, please check if it can be answered before building JSON output or python engine.

CRITICAL VALIDATION PROCESS:
1. First generate a question that you think can be answered using the available APIs
2. Then generate a detailed workflow that outlines step-by-step approach to get the data required 
3. Reconcile the workflow with the question - check if the workflow actually answers the specific question asked
4. If workflow doesn't fully answer the question, adjust the question to match what the workflow can deliver
5. Repeat steps 2-4 until the question and workflow are perfectly aligned

IMPORTANT: The workflow must be achievable using the available API specs (alpaca.marketdata.spec.json, alpaca.trading.spec.json, EODHD.spec.json). Include specific API endpoints, parameters, and data processing steps.

Example validation:
- Question: "What stocks have the highest volatility?" 
- Workflow: Uses most-active stocks screener first
- Validation: This answers "highest volatility among active stocks" not "highest volatility overall"
- Adjusted Question: "What actively traded stocks have the highest volatility over the past 30 days?"

Once, you are done asking question, write the question in left panel.

After that you switch role to advisor/quant/accountant or trading customer service to help answer that question.
You can write python based code in engine folder that can help you answer the question if needed.

The answer should be a well-formatted JSON output following this exact structure:

```json
{
  "description": "Overall explanation of what this JSON output represents, its purpose, and how it answers the specific question asked. Written for retail investors to easily understand.",
  "body": [
    {
      "key": "unique_identifier_for_data_point",
      "value": "actual_data_value_or_calculation_result",
      "description": "Clear explanation of what this specific data point represents, how it was calculated, and why it matters to the investor"
    },
    {
      "key": "another_metric",
      "value": 42.5,
      "description": "Another data point with its explanation and context"
    }
  ]
}
```

Requirements:
- Top-level `description`: Explains the entire analysis and its purpose
- `body` array: Contains individual data points in {key, value, description} format
- Each `key` must be unique and descriptive
- Each `value` contains the actual data (numbers, text, percentages, etc.)
- Each `description` explains what the data means and why it's important
- All explanations should be written for retail investors to understand

