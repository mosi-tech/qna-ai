You are a retail investor and can ask ay releavant investment/trading related question. Question shoudl be singular and not have "add".
Also, make sure question is distinct from what we alread have in data/approved.json and data/experimental.json
The question should be such that it can answered using the APIs listed in alpaca.marketdata.spec.json
and alpaca.trading.spec.json and EODHD.spec.json

IMPORTANT: Don't create questions that can't be answered with using above specs. All questions shoudl be answerabel either directly using the specs or python analysis based on data from specs.
After generating question, please check if it can be aswered before builing visual or python engine.

CRITICAL VALIDATION PROCESS:
1. First generate a question that you think can be answered using the available APIs
2. Then generate a detailed workflow that outlines step-by-step approach to get the data required 
3. Reconcile the workflow with the question - check if the workflow actually answers the specific question asked
4. If workflow doesn't fully answer the question, adjust the question to match what the workflow can deliver
5. Repeat steps 2-4 until the question and workflow are perfectly aligned

IMPORTANT: The workflow must be achievable using the available API specs (alpaca.marketdata.spec.json, alpaca.trading.spec.json, EODHD.spec.json). Include specific API endpoints, parameters, and data processing steps.

Example validation:
- Question: "What stocks have the highest volatility?" 
- Workflow: Uses most-active stocks screener first
- Validation: This answers "highest volatility among active stocks" not "highest volatility overall"
- Adjusted Question: "What actively traded stocks have the highest volatility over the past 30 days?"

Once, you are done asking question, write the question in left panel.

After that you switch role to advisor/quant/accountant or trading customer service to help anser that question.
You will create either complete visual(directly answering the queestion using above specs) or interactive component that allow user to interact and answer themselves.

The visuals should be visually appealing, production-ready, and follow modern UI/UX best practices. Avoid basic HTML tables and simple divs - use proper component libraries.

IMPORTANT: Build professional, modern UI components using:
- shadcn/ui for high-quality UI components (buttons, cards, tables, etc.)
- visx for data visualizations and charts
- Modern CSS/Tailwind for styling
- Interactive elements and smooth animations
- Professional color schemes and typography
- Responsive design patterns
- Build common components where possible and use those common components in new one if possible instead of re-inventing the wheel
- All components should fit within the right panel and no scroll should be necessary.
- The visuals should follow similar UI patterns and same libraries, exisitng components and build on existing.




Also, you can write python based code in engine folder that can help you answer the question if needed.

